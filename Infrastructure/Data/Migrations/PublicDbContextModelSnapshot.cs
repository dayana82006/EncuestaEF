// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(PublicDbContext))]
    partial class PublicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CategoriesCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("CategoriesCatalog", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.CategoryOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatalogOptionsId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriesCatalogId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriesOptionsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OptionsResponseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesCatalogId");

                    b.HasIndex("OptionsResponseId");

                    b.ToTable("CategoryOptions", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Chapters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChapterNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ChapterTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ComponentHtml")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("ComponentReact")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SurveyId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId");

                    b.ToTable("Chapters", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OptionQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriesCatalogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentOptionres")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumberOption")
                        .HasColumnType("longtext");

                    b.Property<int>("OptionCatalogId")
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int>("OptionQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("OptionsResponseId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionsId")
                        .HasColumnType("int");

                    b.Property<int?>("SubQuestionsId")
                        .HasColumnType("int");

                    b.Property<int>("SubquestionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesCatalogId");

                    b.HasIndex("OptionsResponseId");

                    b.HasIndex("QuestionsId");

                    b.HasIndex("SubQuestionsId");

                    b.ToTable("OptionsQuestions");
                });

            modelBuilder.Entity("Domain.Entities.OptionsResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OptionText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("OptionsResponses");
                });

            modelBuilder.Entity("Domain.Entities.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<int?>("ChaptersId")
                        .HasColumnType("int");

                    b.Property<string>("CommentQuestion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("QuestionNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("QuestionText")
                        .HasColumnType("longtext");

                    b.Property<string>("ResponseType")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ChaptersId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Domain.Entities.SubQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentSubQuestion")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionsId")
                        .HasColumnType("int");

                    b.Property<string>("SubquestionNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("SubquestionText")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionsId");

                    b.ToTable("SubQuestions");
                });

            modelBuilder.Entity("Domain.Entities.SumaryOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionsId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int?>("SurveysId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Valuerta")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuestionsId");

                    b.HasIndex("SurveysId");

                    b.ToTable("SumaryOptions");
                });

            modelBuilder.Entity("Domain.Entities.Surveys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComponentHtml")
                        .HasColumnType("longtext");

                    b.Property<string>("ComponentReact")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Instruction")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("Domain.Entities.CategoryOptions", b =>
                {
                    b.HasOne("Domain.Entities.CategoriesCatalog", "CategoriesCatalog")
                        .WithMany("CategoryOptions")
                        .HasForeignKey("CategoriesCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.OptionsResponse", "OptionsResponse")
                        .WithMany("CategoryOptions")
                        .HasForeignKey("OptionsResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriesCatalog");

                    b.Navigation("OptionsResponse");
                });

            modelBuilder.Entity("Domain.Entities.Chapters", b =>
                {
                    b.HasOne("Domain.Entities.Surveys", "Surveys")
                        .WithMany("Chapters")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Surveys");
                });

            modelBuilder.Entity("Domain.Entities.OptionQuestions", b =>
                {
                    b.HasOne("Domain.Entities.CategoriesCatalog", "CategoriesCatalog")
                        .WithMany("OptionQuestions")
                        .HasForeignKey("CategoriesCatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.OptionsResponse", "OptionsResponse")
                        .WithMany("OptionQuestions")
                        .HasForeignKey("OptionsResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Questions", "Questions")
                        .WithMany("OptionQuestions")
                        .HasForeignKey("QuestionsId");

                    b.HasOne("Domain.Entities.SubQuestions", "SubQuestions")
                        .WithMany("OptionQuestions")
                        .HasForeignKey("SubQuestionsId");

                    b.Navigation("CategoriesCatalog");

                    b.Navigation("OptionsResponse");

                    b.Navigation("Questions");

                    b.Navigation("SubQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Questions", b =>
                {
                    b.HasOne("Domain.Entities.Chapters", "Chapters")
                        .WithMany("Questions")
                        .HasForeignKey("ChaptersId");

                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("Domain.Entities.SubQuestions", b =>
                {
                    b.HasOne("Domain.Entities.Questions", "Questions")
                        .WithMany("SubQuestions")
                        .HasForeignKey("QuestionsId");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Domain.Entities.SumaryOptions", b =>
                {
                    b.HasOne("Domain.Entities.Questions", "Questions")
                        .WithMany("SumaryOptions")
                        .HasForeignKey("QuestionsId");

                    b.HasOne("Domain.Entities.Surveys", "Surveys")
                        .WithMany("SumaryOptions")
                        .HasForeignKey("SurveysId");

                    b.Navigation("Questions");

                    b.Navigation("Surveys");
                });

            modelBuilder.Entity("Domain.Entities.CategoriesCatalog", b =>
                {
                    b.Navigation("CategoryOptions");

                    b.Navigation("OptionQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Chapters", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Domain.Entities.OptionsResponse", b =>
                {
                    b.Navigation("CategoryOptions");

                    b.Navigation("OptionQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Questions", b =>
                {
                    b.Navigation("OptionQuestions");

                    b.Navigation("SubQuestions");

                    b.Navigation("SumaryOptions");
                });

            modelBuilder.Entity("Domain.Entities.SubQuestions", b =>
                {
                    b.Navigation("OptionQuestions");
                });

            modelBuilder.Entity("Domain.Entities.Surveys", b =>
                {
                    b.Navigation("Chapters");

                    b.Navigation("SumaryOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
